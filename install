#!/usr/bin/env python3

import os
import sys
import subprocess as sp
import importlib.util
import configparser
import shutil

# Check if the required libraries are installed

# List for important binary directories in the installation process
bin_directories = (("dist/battery-switcher-76", "/usr/local/bin/battery-switcher-76",),
               ("dist/battery-switcher-76-service", "/usr/local/bin/battery-switcher-76-service"))

def remove_file(dir):
    if os.path.isfile(dir):
        sp.run(["sudo", "rm", dir], stdout=sp.DEVNULL, stderr=sp.DEVNULL)

def remove_build_leftovers():
    shutil.rmtree("dist")
    shutil.rmtree("build")
    os.remove("battery-switcher-76.spec")
    os.remove("battery-switcher-76-service.spec")

if __name__ == "__main__":
    if importlib.util.find_spec("PyInstaller") is None:
        print("Please install PyInstaller to continue. It can be done by typing `pip install pyinstaller` in a terminal.")
        sys.exit(2)

    if importlib.util.find_spec("psutil") is None:
        print("Please install psutil to continue. It can be done by typing `pip install psutil` in a terminal.")
        sys.exit(2)

    try:
        # Compile the Python scripts with PyInstaller
        print("Compiling battery-switcher-76...")
        sp.run(["pyinstaller", "src/battery-switcher-76.py", "--onefile"], stdout=sp.DEVNULL, stderr=sp.DEVNULL)
        print("Compiling battery-switcher-76-service...")
        sp.run(["pyinstaller", "src/battery-switcher-76-service.py", "--onefile"], stdout=sp.DEVNULL, stderr=sp.DEVNULL)

        # Check how the user wants to build and install the package
        if len(sys.argv) > 1 and (sys.argv[1] == "-d" or sys.argv[1] == "--debian"): # Build Debian package
            print("Debian packaging building is not currently supported...")
            sys.exit(3)
        elif len(sys.argv) > 1 and (sys.argv[1] == "-t" or sys.argv[1] == "--tar"): # Build a tar.gz archive with installation script
            print(".tar.gz archive building is not currently supported")
            sys.exit(3)
        else: # Install locally if no arguments are provided
            # Move the files (Requries sudo privileges)
            print("Please enter your sudo password to procceed with the installation")
            for paths in bin_directories:
                sp.run(["sudo", "cp", paths[0], paths[1]], stdout=sp.DEVNULL, stderr=sp.DEVNULL)
                sp.run(["sudo", "chmod", "755", paths[1]], stdout=sp.DEVNULL, stderr=sp.DEVNULL)
                print(f"Moved {paths[0][5:]} to {paths[1]}")

            # Create the configuration file if it doesn't exist
            if not os.path.exists("/usr/local/etc/battery-switcher-76/config.ini"):
                config = configparser.ConfigParser()
                config["Config"] = {"OnBattery": "battery", "Charging": "performance"}
                with open("dist/config.ini", 'w') as configfile:
                    config.write(configfile)
                print("Created configuration file")

                sp.run(["sudo", "mkdir", "-p", "/usr/local/etc/battery-switcher-76"], stdout=sp.DEVNULL, stderr=sp.DEVNULL)
                sp.run(["sudo", "cp", "dist/config.ini", "/usr/local/etc/battery-switcher-76/config.ini"], stdout=sp.DEVNULL, stderr=sp.DEVNULL)
            else:
                print("Configuration file already exists")

            # Create version info file
            print("Creating version information file...")
            version = configparser.ConfigParser()
            version["Version"] = {"Major": "0", "Minor": "0", "Patch": "1"}
            with open("dist/version.ini", 'w') as versionfile:
                version.write(versionfile)
            print("Created version information file")

            sp.run(["sudo", "cp", "dist/version.ini", "/usr/local/etc/battery-switcher-76/version.ini"], stdout=sp.DEVNULL, stderr=sp.DEVNULL)

        # Add the systemd service
        sp.run(["sudo", "cp", "src/systemd/battery-switcher-76.service", "/etc/systemd/system/battery-switcher-76.service"], stdout=sp.DEVNULL, stderr=sp.DEVNULL)
        print("Created systemd service")
        sp.run(["sudo", "systemctl", "start", "battery-switcher-76"], stdout=sp.DEVNULL, stderr=sp.DEVNULL)
        print("Started systemd service")
        sp.run(["sudo", "systemctl", "enable", "battery-switcher-76"], stdout=sp.DEVNULL, stderr=sp.DEVNULL)
        print("Enabled systemd service")

        # Delete leftover files
        remove_build_leftovers()
 
    except Exception as e:
        print(f"Something went wrong with the installation. All installed contents will be removed.\nError: {e}")

        # Remove relevant files
        for paths in bin_directories:
            remove_file(paths[1])
        remove_file("/usr/local/etc/battery-switcher-76/config.ini")
        remove_file("/usr/local/etc/battery-switcher-76/version.ini")
        remove_file("/etc/systemd/system/battery-switcher-76.service")

        # Remove build leftovers
        remove_build_leftovers()